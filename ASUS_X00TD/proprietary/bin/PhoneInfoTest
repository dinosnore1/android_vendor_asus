#!/system/bin/sh
#########################################################################
#    PhoneInfoTest                                                      #
#    adb push PhoneInfoTest /system/bin                                 #
#    e.g. PhoneInfoTest 2 1 123456                                      #
#########################################################################

#IMEI_TOOL="/system/bin/get_IMEI"
XSN_TOOL="/system/bin/wprod"
MAC_ADDR_TOOL="/system/bin/wprod"

INDEX=0
COUNT=5
REC=1

function print_usage(){
    echo "Usage:"$0""
    echo "[0=SSN] [0=Read|1=Write[String]]"
    echo "[1=IMEI] [0=Read|1=Write[String]]"
    echo "[2=BT Mac] [0=Read|1=Write[String]]"
    echo "[3=WIFI Mac] [0=Read|1=Write[String]]"
    echo "[4=ISN] [0=Read|1=Write[String]]"
    echo "[6=Country] [0=Read|1=Write[String]]"
    echo "[7=Color ID] [0=Read|1=Write[String]]"
    echo "[8=Customer ID] [0=Read|1=Write[String]]"
    echo "[12=Multisim]    [0=Read | 1=Write[Multisim Config]]"
    echo "[100=BTFLAG] [0=Read|1=Write[String]]"
    echo "[101=FTFLAG] [0=Read|1=Write[String]]"
    echo "[102=ATFLAG] [0=Read|1=Write[String]]"
    echo "[103=WFFLAG] [0=Read|1=Write[String]]"
    echo "[104=WAFLAG] [0=Read|1=Write[String]]"
    echo "[105=PCBATESTFLAG] [0=Read|1=Write[String]]"
    echo "[106=MMI1TESTFLAG] [0=Read|1=Write[String]]"
    echo "[107=MMI2TESTFLAG] [0=Read|1=Write[String]]"
    echo "[108=FULLTESTFLAG] [0=Read|1=Write[String]]"
    echo "[109=RUNINFLAG] [0=Read|1=Write[String]]"
    echo "[110=RESETFLAG] [0=Read|1=Write[String]]"
    echo "[200=SN] [0=Read|1=Write[String]]"
    echo "[201=PN] [0=Read|1=Write[String]]"
}

case $1 in
    "0") #SSN
        case $2 in
            "1") # Write
            		#songjiangchao, 2015-05-08, add for write to modem nvram  and AP nvram start
            		# the info (like "Starting service: Intent { cmp=com.huaqin.imeiwriterservice/.ImeiWriterService (has extras) }" etc.) 
            		#must NOT appear on console according to ASUS , which is controlled in frameworks/base/cmds/am/Am.java
            		setprop sys.ixmx.hideconsoleinfo 1
            		sh /system/bin/am startservice -n com.huaqin.imeiwriterservice/.ImeiWriterService --es action_type WritingSSN --es my_num $3
            		sleep 1
             		$XSN_TOOL ssn w $3
            		while [ $INDEX -lt $COUNT ]
            		do
            			INDEX=$(($INDEX+1))
            			result=`getprop sys.ixmx.modify`
#            			echo "sys.ixmx.modify--->"
#            			echo $result
            			if [ $result == $REC ]; then
					setprop sys.ixmx.hideconsoleinfo 0
					$XSN_TOOL backupToBinRegion  # to backup AP NvRAM and Modem NvRAM
					sleep 1
					echo "0" # success result must be shown after backingup
					exit 0
            			fi
            			sleep 1
			done
            		echo "1"
            		exit 1
			#songjiangchao, 2015-05-08, add for write to modem nvram and AP nvram end
#            		$XSN_TOOL ssn w $3   # songjiangchao, 2015-05-08,  move to above
            ;;
            "0") # Read
            		$XSN_TOOL ssn r
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    "1") #IMEI
        case $2 in
            "0") # Read
                #setprop sys.imei.start 0

                #sh /system/bin/am start -S -n com.huaqin.imei/com.huaqin.imei.GetIMEIActivity
                while [ $INDEX -lt $COUNT ]
                do
            		INDEX=$(($INDEX+1))
            		result=`getprop sys.imei.start`
            		if [ $result == $REC ]; then
				echo `getprop sys.imei1.value`
				echo `getprop sys.imei2.value`
				exit 0
            		fi
            		sleep 1
                done
                echo "1"
                #IMEI=`$IMEI_TOOL`
                #echo $IMEI
                #echo "358463051106605"
            ;;
            "1") # Write<IMEI1>
            #songjiangchao , 2015-04-30 ,add start
            # the info (like "Starting service: Intent { cmp=com.huaqin.imeiwriterservice/.ImeiWriterService (has extras) }" etc.) 
            #must NOT appear on console according to ASUS , which is controlled in frameworks/base/cmds/am/Am.java
                setprop sys.ixmx.hideconsoleinfo 1
                sh /system/bin/am startservice -n com.huaqin.imeiwriterservice/.ImeiWriterService --es action_type WritingIMEI1 --es my_num $3
                while [ $INDEX -lt $COUNT ]
                do
            		INDEX=$(($INDEX+1))
            		result=`getprop sys.ixmx.modify`
#            		echo "sys.ixmx.modify--->"
#            		echo $result
            		if [ $result == $REC ]; then
				setprop sys.ixmx.hideconsoleinfo 0
				$XSN_TOOL backupToBinRegion
				sleep 1
				echo "0"
				exit 0
            		fi
            		sleep 1
                done
            #songjiangchao , 2015-04-30 ,add  end
		echo "1"
                exit 1
            ;;
            "2") # Write<IMEI2>
            #songjiangchao , 2015-04-30 ,add start
            # the info (like "Starting service: Intent { cmp=com.huaqin.imeiwriterservice/.ImeiWriterService (has extras) }" etc.) 
            #must NOT appear on console according to ASUS , which is controlled in frameworks/base/cmds/am/Am.java
                setprop sys.ixmx.hideconsoleinfo 1
                sh /system/bin/am startservice -n com.huaqin.imeiwriterservice/.ImeiWriterService --es action_type WritingIMEI2 --es my_num $3
                while [ $INDEX -lt $COUNT ]
                do
            		INDEX=$(($INDEX+1))
            		result=`getprop sys.ixmx.modify`
#            		echo "sys.ixmx.modify--->"
#            		echo $result
            		if [ $result == $REC ]; then
				echo "0"
				setprop sys.ixmx.hideconsoleinfo 0
				$XSN_TOOL backupToBinRegion
				exit 0
            		fi
            		sleep 1
                done
            #songjiangchao , 2015-04-30 ,add  end
		echo "1"
                exit 1
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    "2") #BT MAC
        case $2 in
            "0") # Read
            		$MAC_ADDR_TOOL bt r
            ;;
            "1") # Write
            		$MAC_ADDR_TOOL bt w $3
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    "3") #WIFI MAC
        case $2 in
            "0") # Read
            		$MAC_ADDR_TOOL wifi r
            ;;
            "1") # Write
            		$MAC_ADDR_TOOL wifi w $3
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    "4") #ISN
        case $2 in
            "1") # Write
            		#songjiangchao, 2015-05-08, add for write to modem nvram  and AP nvram start
            		# the info (like "Starting service: Intent { cmp=com.huaqin.imeiwriterservice/.ImeiWriterService (has extras) }" etc.) 
            		#must NOT appear on console according to ASUS , which is controlled in frameworks/base/cmds/am/Am.java
            		setprop sys.ixmx.hideconsoleinfo 1
            		sh /system/bin/am startservice -n com.huaqin.imeiwriterservice/.ImeiWriterService --es action_type WritingISN --es my_num $3
            		sleep 1
             		$XSN_TOOL isn w $3
            		while [ $INDEX -lt $COUNT ]
            		do
            			INDEX=$(($INDEX+1))
            			result=`getprop sys.ixmx.modify`
#            			echo "sys.ixmx.modify 2222 --->"
#            			echo $result
            			if [ $result == $REC ]; then
					setprop sys.ixmx.hideconsoleinfo 0
					$XSN_TOOL backupToBinRegion  # to backup AP NvRAM and Modem NvRAM
					sleep 1
					echo "0" # success result must be shown after backingup
					exit 0
            			fi
            			sleep 1
			done
            		echo "1"
            		exit 1
			#songjiangchao, 2015-05-08, add for write to modem nvram and AP nvram end
#            		$XSN_TOOL isn w $3   # songjiangchao, 2015-05-08,  move to above
            ;;
            "0") # Read
            		$XSN_TOOL isn r
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    "6") #Country code
        case $2 in
            "0") # Read
            		$MAC_ADDR_TOOL cn r
            ;;
            "1") # Write
            		$MAC_ADDR_TOOL cn w $3
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    "7") #Color ID
        case $2 in
            "0") # Read
            		$MAC_ADDR_TOOL cc r
            ;;
            "1") # Write
            		$MAC_ADDR_TOOL cc w $3
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    "8") #Customer ID
        case $2 in
            "0") # Read
                # echo "1"
		#result=`getprop persist.custom.customer_id`
                #echo $result
                         $MAC_ADDR_TOOL ct r
            ;;
            "1") # Write
                 # echo "1"
		#setprop persist.custom.customer_id $3
               #echo "0"
                         $MAC_ADDR_TOOL ct w $3
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    "12") #Multisim
        case $2 in
            "0") # Read NV 4398 & getprop persist.radio.multisim.config
                    $MAC_ADDR_TOOL multisim r
            ;;
            "1") # Single SIM S1 # Dual SIM S2
                    $MAC_ADDR_TOOL multisim w $3
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    ##############################################
    # Factory Test Flag
    ##############################################
    "100") #BTFLAG
        case $2 in
            "0") # READ
                $MAC_ADDR_TOOL btf r
                echo "BTFLAG 0"
            ;;
            "1") # Write
                $MAC_ADDR_TOOL btf w $3
                echo "BTFLAG 1"
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    "101") #FTFLAG
        case $2 in
            "0") # Read
                $MAC_ADDR_TOOL ft r
                echo "FTFLAG 0"
            ;;
            "1") # Write
                $MAC_ADDR_TOOL ft w $3
                echo "FTFLAG 1"
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    "102") #ATFLAG
        case $2 in
            "0") # Read
                $MAC_ADDR_TOOL at r
                echo "ATFLAG 0"
            ;;
            "1") # Write
                $MAC_ADDR_TOOL at w $3
                echo "ATFLAG 1"
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    "103") #WFFLAG
        case $2 in
            "0") # Read
                $MAC_ADDR_TOOL wf r
                echo "WFFLAG 0"
            ;;
            "1") # Write
                $MAC_ADDR_TOOL wf w $3
                echo "WFFLAG 1"
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    "104") #WAFLAG
        case $2 in
            "0") # Read
                $MAC_ADDR_TOOL wa r
                echo "WAFLAG 0"
            ;;
            "1") # Write
                $MAC_ADDR_TOOL wa w $3
                echo "WAFLAG 1"
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    "105") #PCBATESTFLAG
        case $2 in
            "0") # Read
                $MAC_ADDR_TOOL pcba r
                echo "PCBATESTFLAG 0"
            ;;
            "1") # Write
                $MAC_ADDR_TOOL pcba w $3
                echo "PCBATESTFLAG 1"
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    "106") #MMI1FLAG
        case $2 in
            "0") # Read
                $MAC_ADDR_TOOL mmi1 r
                echo "MMI1FLAG 0"
            ;;
            "1") # Write
                $MAC_ADDR_TOOL mmi1 w $3
                echo "MMI1FLAG 1"
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    "107") #MMI2FLAG
        case $2 in
            "0") # Read
                $MAC_ADDR_TOOL mmi2 r
                echo "MMI2FLAG 0"
            ;;
            "1") # Write
                $MAC_ADDR_TOOL mmi2 w $3
                echo "MMI2FLAG 1"
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    "108") #FULLTESTFLAG
        case $2 in
            "0") # Read
                $MAC_ADDR_TOOL full r
                echo "FULLTESTFLAG 0"
            ;;
            "1") # Write
                $MAC_ADDR_TOOL full w $3
                echo "FULLTESTFLAG 1"
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    "109") #RUNINTESTFLAG
        case $2 in
            "0") # Read
                $MAC_ADDR_TOOL run r
                echo "RUNINTESTFLAG 0"
            ;;
            "1") # Write
                $MAC_ADDR_TOOL run w $3
                echo "RUNINTESTFLAG 1"
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    "110") #RESETFLAG
        case $2 in
            "0") # Read
                $MAC_ADDR_TOOL reset r
                echo "RESETFLAG 0"
            ;;
            "1") # Write
                $MAC_ADDR_TOOL reset w $3
                echo "RESETFLAG 1"
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    #######################################
    "200") #SN
        case $2 in
            "0") # Read SN
                $MAC_ADDR_TOOL sn r
                echo "SN 0"
            ;;
            "1") # Write SN
                $MAC_ADDR_TOOL sn w $3
                echo "SN 1"
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    "201") #PN
        case $2 in
            "0") # Read PN
                $MAC_ADDR_TOOL pn r
                echo "PN 0"
            ;;
            "1") # Write PN
                $MAC_ADDR_TOOL pn w $3
                echo "PN 1"
            ;;
            *)
                print_usage
                exit 1
            ;;
        esac
    ;;
    *)
        print_usage
        exit 1
    ;;
esac

exit 0
